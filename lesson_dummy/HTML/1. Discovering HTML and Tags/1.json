{
  "abTests": {

  },
  "__N_SSG": true,
  "pageProps": {
    "lessons": [
      {
        "type": "Interactive",
        "id": 76804,
        "index": 0,
        "preInteractionModules": [
          {
            "type": "image",
            "src": "3715016a-67b7-42d1-9961-ab2e37adba3d",
            "visibleIf": "always"
          },
          {
            "type": "paragraph",
            "content": "환영합니다! HTML, CSS, JavaScript, React 그리고 웹 개발에 필요한 모든 기술들을 배우게 될 거예요.",
            "visibleIf": "always"
          },
          {
            "type": "paragraph",
            "content": "곧 실제 프로젝트를 만들게 될 거예요. 먼저 **HTML**부터 시작해볼까요?",
            "visibleIf": "always"
          }
        ],
        "interactionModule": null,
        "postInteractionModules": []
      },
      {
        "type": "Interactive",
        "id": 75802,
        "index": 1,
        "preInteractionModules": [
          {
            "type": "paragraph",
            "content": "하이퍼텍스트 마크업 언어, 즉 **HTML**은 인터넷의 웹 페이지를 구조화하는 컴퓨터 언어입니다.",
            "visibleIf": "always"
          },
          {
            "type": "paragraph",
            "content": "HTML을 기반으로 버튼, 이미지 등을 포함한 멋진 웹 페이지를 만들 수 있어요.\n",
            "visibleIf": "always"
          },
          {
            "type": "webview",
            "content": "\u003Chtml\u003E\n \u003Chead\u003E\n  \u003Cstyle\u003E\n   body {\n    font-family: sans-serif;\n    color: #2C3E50;\n    background-color: #9aa4d2;\n    margin-top: 5%;\n    min-height: 300px;\n   }\n   \n   button[disabled] {\n    opacity: 0.5;\n    cursor: default;\n   }\n   \n   h2,\n   h1,\n   #result {\n    text-align: center;\n    margin: 5px;\n   }\n   \n   #letterButtons {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    width: 100%;\n    padding: 0;\n    justify-content: center;\n   }\n   \n   button {\n    width: 40px;\n    height: 40px;\n    background-color: #34495E;\n    color: #FFF;\n    font-size: 14px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    margin: 7px;\n    text-align: center;\n   }\n   \n   #result {\n    width: 80%;\n    height: 20px;\n    padding: 10px;\n    font-size: 1.3em;\n    margin: 0px auto;\n    border-radius: 5px;\n    color: white;\n    font-weight: bold;\n   }\n   \n   img {\n    width: 80%;\n    max-width:150px;\n    height: auto;\n    border-radius: 5px;\n    margin: 10px auto;\n    text-align: center;\n    display: none;\n    justify-content: center;\n    border: white 2px solid;\n   }\n  \u003C/style\u003E\n \u003C/head\u003E\n \u003Cbody\u003E\n  \u003Ch1 id=\"result\"\u003EGuess the letter\u003C/h1\u003E\n  \u003Ch2\u003E_ O G\u003C/h2\u003E\n  \u003Cimg\u003E\n  \u003Cdiv id=\"letterButtons\"\u003E\n   \u003Cbutton\u003EQ\u003C/button\u003E\n   \u003Cbutton\u003ER\u003C/button\u003E\n   \u003Cbutton\u003ED\u003C/button\u003E\n  \u003C/div\u003E\n  \u003Cscript\u003E\n   let letterButtons = document.querySelectorAll(\n    '#letterButtons button');\n   let result = document.getElementById('result');\n   let image = document.getElementsByTagName(\"img\")[0];\n   let correctLetter = 'D';\n   let word = document.querySelector('h2');\n   letterButtons.forEach(button =\u003E {\n    button.addEventListener('click', function() {\n     let letter = this.textContent;\n     if (letter !== correctLetter) {\n      button.disabled = true;\n     }\n     if (letter === correctLetter) {\n      result.innerHTML = 'Correct!';\n      result.style.color = \"#046865\";\n      image.style.display = \"flex\";\n      image.src = 'https://mimo.app/i/dog_yawn.png';\n      word.textContent = 'D O G';\n      letterButtons.forEach(button =\u003E {\n       button.disabled = true;\n      });\n     } else {\n      result.innerHTML = 'Try again';\n      result.style.color = \"#D1345B\";\n     }\n    });\n   });\n  \u003C/script\u003E\n \u003C/body\u003E\n\u003C/html\u003E",
            "visibleIf": "always"
          }
        ],
        "interactionModule": null,
        "postInteractionModules": []
      },
      {
        "type": "Interactive",
        "id": 75817,
        "index": 2,
        "preInteractionModules": [
          {
            "type": "paragraph",
            "content": "HTML 코드 `\u003Cbutton\u003ELike\u003C/button\u003E`를 추가하면 \"Like\"라는 라벨이 있는 버튼을 만들 수 있어요.",
            "visibleIf": "always"
          }
        ],
        "interactionModule": {
          "type": "codeFillTheGap",
          "files": [
            {
              "isInteractive": true,
              "name": "index.html",
              "content": "\u003Cbutton\u003ELike\u003C/button\u003E",
              "codeLanguage": "html"
            }
          ],
          "interactionOptions": [
            {
              "startIndex": 0,
              "endIndex": 21,
              "startLine": 0,
              "startPos": 0,
              "length": 21,
              "value": "\u003Cbutton\u003ELike\u003C/button\u003E",
              "correct": true
            }
          ],
          "wrongOptions": [],
          "output": null
        },
        "postInteractionModules": [
          {
            "type": "paragraph",
            "content": "Make sure to pick `\u003Cbutton\u003ELike\u003C/button\u003E`.",
            "visibleIf": "wrong"
          }
        ]
      },
      {
        "type": "Interactive",
        "id": 75819,
        "index": 3,
        "preInteractionModules": [
          {
            "type": "paragraph",
            "content": "버튼을 만드는 HTML 코드는 여는 태그 `\u003Cbutton\u003E`와 닫는 태그 `\u003C/button\u003E`를 이 순서대로 사용합니다.",
            "visibleIf": "always"
          }
        ],
        "interactionModule": {
          "type": "codeFillTheGap",
          "files": [
            {
              "isInteractive": true,
              "name": "index.html",
              "content": "\u003Cbutton\u003ELike\u003C/button\u003E",
              "codeLanguage": "html"
            }
          ],
          "interactionOptions": [
            {
              "startIndex": 0,
              "endIndex": 8,
              "startLine": 0,
              "startPos": 0,
              "length": 8,
              "value": "\u003Cbutton\u003E",
              "correct": true
            },
            {
              "startIndex": 12,
              "endIndex": 21,
              "startLine": 0,
              "startPos": 12,
              "length": 9,
              "value": "\u003C/button\u003E",
              "correct": true
            }
          ],
          "wrongOptions": [],
          "output": null
        },
        "postInteractionModules": [
          {
            "type": "paragraph",
            "content": "Make sure to pick `\u003Cbutton\u003E`, followed by `\u003C/button\u003E`.",
            "visibleIf": "wrong"
          }
        ]
      },
      {
        "type": "Interactive",
        "id": 75821,
        "index": 4,
        "preInteractionModules": [
          {
            "type": "paragraph",
            "content": "버튼의 여는 태그와 닫는 태그 사이에 있는 텍스트가 버튼의 라벨이 됩니다.",
            "visibleIf": "always"
          }
        ],
        "interactionModule": {
          "type": "codeFillTheGap",
          "files": [
            {
              "isInteractive": true,
              "name": "index.html",
              "content": "\u003Cbutton\u003ELike\u003C/button\u003E",
              "codeLanguage": "html"
            }
          ],
          "interactionOptions": [
            {
              "startIndex": 8,
              "endIndex": 12,
              "startLine": 0,
              "startPos": 8,
              "length": 4,
              "value": "Like",
              "correct": true
            }
          ],
          "wrongOptions": [],
          "output": null
        },
        "postInteractionModules": [
          {
            "type": "paragraph",
            "content": "Make sure to pick `Like`.",
            "visibleIf": "wrong"
          }
        ]
      },
      {
        "type": "Interactive",
        "id": 75816,
        "index": 5,
        "preInteractionModules": [
          {
            "type": "paragraph",
            "content": "지금까지 배운 내용을 테스트해볼까요! 이 태그는 어떤 종류일까요? `\u003C/button\u003E`",
            "visibleIf": "always"
          }
        ],
        "interactionModule": {
          "type": "multipleChoice",
          "files": [],
          "items": [
            {
              "correct": true,
              "value": 0,
              "text": "닫는 태그"
            },
            {
              "correct": false,
              "value": 1,
              "text": "여는 태그"
            }
          ],
          "isCode": false,
          "output": null
        },
        "postInteractionModules": [
          {
            "type": "paragraph",
            "content": "닫는 태그입니다.",
            "visibleIf": "wrong"
          }
        ]
      },
      {
        "type": "Interactive",
        "id": 76812,
        "index": 6,
        "preInteractionModules": [
          {
            "type": "paragraph",
            "content": "다음 중 **잘못** 작성된 태그는 무엇일까요?",
            "visibleIf": "always"
          }
        ],
        "interactionModule": {
          "type": "multipleChoice",
          "files": [],
          "items": [
            {
              "correct": false,
              "value": 0,
              "text": "`\u003Cbutton\u003E`"
            },
            {
              "correct": false,
              "value": 1,
              "text": "`\u003C/button\u003E`"
            },
            {
              "correct": true,
              "value": 2,
              "text": "`\u003Cbutton\\\u003E`"
            }
          ],
          "isCode": false,
          "output": null
        },
        "postInteractionModules": [
          {
            "type": "paragraph",
            "content": "`\u003Cbutton\\\u003E`를 선택하세요.",
            "visibleIf": "wrong"
          }
        ]
      },
      {
        "type": "Interactive",
        "id": 130087,
        "index": 7,
        "preInteractionModules": [
          {
            "type": "paragraph", 
            "content": "이전 예제를 기억하시나요? 다음 단계에서는 **Q**, **R**, **D** 버튼을 만들어보겠습니다. 지금은 나머지 코드는 무시하도록 하겠습니다.",
            "visibleIf": "always"
          },
          {
            "type": "webview",
            "content": "\u003Chtml\u003E \n \u003Chead\u003E \n  \u003Cstyle\u003E \n   body { \n    font-family: sans-serif; \n    color: #2C3E50; \n    background-color: #9aa4d2; \n    margin-top: 5%; \n    min-height: 300px; \n   } \n    \n   button[disabled] { \n    opacity: 0.5; \n    cursor: default; \n   } \n    \n   h2, \n   h1, \n   #result { \n    text-align: center; \n    margin: 5px; \n   } \n    \n   #letterButtons { \n    display: flex; \n    flex-direction: row; \n    flex-wrap: wrap; \n    width: 100%; \n    padding: 0; \n    justify-content: center; \n   } \n    \n   button { \n    width: 40px; \n    height: 40px; \n    background-color: #34495E; \n    color: #FFF; \n    font-size: 14px; \n    border: none; \n    border-radius: 5px; \n    cursor: pointer; \n    margin: 7px; \n    text-align: center; \n   } \n    \n   #result { \n    width: 80%; \n    height: 20px; \n    padding: 10px; \n    font-size: 1.3em; \n    margin: 0px auto; \n    border-radius: 5px; \n    color: white; \n    font-weight: bold; \n   } \n    \n   img { \n    width: 80%; \n    max-width:150px; \n    height: auto; \n    border-radius: 5px; \n    margin: 10px auto; \n    text-align: center; \n    display: none; \n    justify-content: center; \n    border: white 2px solid; \n   } \n  \u003C/style\u003E \n \u003C/head\u003E \n \u003Cbody\u003E \n  \u003Ch1 id=\"result\"\u003E글자를 맞춰보세요\u003C/h1\u003E \n  \u003Ch2\u003E_ O G\u003C/h2\u003E \n  \u003Cimg\u003E \n  \u003Cdiv id=\"letterButtons\"\u003E \n   \u003Cbutton\u003EQ\u003C/button\u003E \n   \u003Cbutton\u003ER\u003C/button\u003E \n   \u003Cbutton\u003ED\u003C/button\u003E \n  \u003C/div\u003E \n  \u003Cscript\u003E \n   let letterButtons = document.querySelectorAll( \n    '#letterButtons button'); \n   let result = document.getElementById('result'); \n   let image = document.getElementsByTagName(\"img\")[0]; \n   let correctLetter = 'D'; \n   let word = document.querySelector('h2'); \n   letterButtons.forEach(button =\u003E { \n    button.addEventListener('click', function() { \n     let letter = this.textContent; \n     if (letter !== correctLetter) { \n      button.disabled = true; \n     } \n     if (letter === correctLetter) { \n      result.innerHTML = '정답입니다!'; \n      result.style.color = \"#046865\"; \n      image.style.display = \"flex\"; \n      image.src = 'https://mimo.app/i/dog_yawn.png'; \n      word.textContent = 'D O G'; \n      letterButtons.forEach(button =\u003E { \n       button.disabled = true; \n      }); \n     } else { \n      result.innerHTML = '다시 시도해보세요'; \n      result.style.color = \"#D1345B\"; \n     } \n    }); \n   }); \n  \u003C/script\u003E \n \u003C/body\u003E \n\u003C/html\u003E",
            "visibleIf": "always"
          }
        ],
        "interactionModule": null,
        "postInteractionModules": []
      },
      {
        "type": "Interactive",
        "id": 75824,
        "index": 8,
        "preInteractionModules": [
          {
            "type": "paragraph",
            "content": "\"Q\"라는 라벨이 있는 버튼을 만들어보세요.",
            "visibleIf": "always"
          }
        ],
        "interactionModule": {
          "type": "codeFillTheGap",
          "files": [
            {
              "isInteractive": true,
              "name": "index.html",
              "content": "\u003Cbutton\u003EQ\u003C/button\u003E",
              "codeLanguage": "html"
            }
          ],
          "interactionOptions": [
            {
              "startIndex": 0,
              "endIndex": 8,
              "startLine": 0,
              "startPos": 0,
              "length": 8,
              "value": "\u003Cbutton\u003E",
              "correct": true
            },
            {
              "startIndex": 8,
              "endIndex": 9,
              "startLine": 0,
              "startPos": 8,
              "length": 1,
              "value": "Q",
              "correct": true
            },
            {
              "startIndex": 9,
              "endIndex": 18,
              "startLine": 0,
              "startPos": 9,
              "length": 9,
              "value": "\u003C/button\u003E",
              "correct": true
            }
          ],
          "wrongOptions": [],
          "output": null
        },
        "postInteractionModules": [
          {
            "visibleIf": "correct",
            "type": "webview",
            "content": "\u003Chtml\u003E\n \u003Chead\u003E\n  \u003Cstyle\u003E\n   body {\n    font-family: sans-serif;\n    color: #2C3E50;\n    background-color: #9aa4d2;\n    margin-top: 5%;\n    min-height: 300px;\n   }\n   \n   button[disabled] {\n    opacity: 0.5;\n    cursor: default;\n   }\n   \n   h2,\n   h1,\n   #result {\n    text-align: center;\n    margin: 5px;\n   }\n   \n   #letterButtons {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    width: 100%;\n    padding: 0;\n    justify-content: center;\n   }\n   \n   button {\n    width: 40px;\n    height: 40px;\n    background-color: #34495E;\n    color: #FFF;\n    font-size: 14px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    margin: 7px;\n    text-align: center;\n   }\n   \n   #result {\n    width: 80%;\n    height: 20px;\n    padding: 10px;\n    font-size: 1.3em;\n    margin: 0px auto;\n    border-radius: 5px;\n    color: white;\n    font-weight: bold;\n   }\n   \n   img {\n    width: 80%;\n    max-width:150px;\n    height: auto;\n    border-radius: 5px;\n    margin: 10px auto;\n    text-align: center;\n    display: none;\n    justify-content: center;\n    border: white 2px solid;\n   }\n  \u003C/style\u003E\n \u003C/head\u003E\n \u003Cbody\u003E\n  \u003Ch1 id=\"result\"\u003E글자를 맞춰보세요\u003C/h1\u003E\n  \u003Ch2\u003E_ O G\u003C/h2\u003E\n  \u003Cimg\u003E\n  \u003Cdiv id=\"letterButtons\"\u003E\n   \u003Cbutton\u003EQ\u003C/button\u003E\n  \u003C/div\u003E\n  \u003Cscript\u003E\n   let letterButtons = document.querySelectorAll(\n    '#letterButtons button');\n   let result = document.getElementById('result');\n   let image = document.getElementsByTagName(\"img\")[0];\n   let correctLetter = 'D';\n   let word = document.querySelector('h2');\n   letterButtons.forEach(button =\u003E {\n    button.addEventListener('click', function() {\n     let letter = this.textContent;\n     if (letter !== correctLetter) {\n      button.disabled = true;\n     }\n     if (letter === correctLetter) {\n      result.innerHTML = '정답입니다!';\n      result.style.color = \"#046865\";\n      image.style.display = \"flex\";\n      image.src = 'https://mimo.app/i/dog_yawn.png';\n      word.textContent = 'D O G';\n      letterButtons.forEach(button =\u003E {\n       button.disabled = true;\n      });\n     } else {\n      result.innerHTML = '다시 시도해보세요';\n      result.style.color = \"#D1345B\";\n     }\n    });\n   });\n  \u003C/script\u003E\n \u003C/body\u003E\n\u003C/html\u003E"
          },
          {
            "type": "paragraph",
            "content": "`\u003Cbutton\u003E`를 선택하고, `Q`를 입력한 다음, `\u003C/button\u003E`를 선택하세요.",
            "visibleIf": "wrong"
          }
        ]
      },
      {
        "type": "Interactive",
        "id": 75822,
        "index": 9,
        "preInteractionModules": [
          {
            "type": "paragraph", 
            "content": "\"R\"이라는 라벨이 있는 버튼을 만드세요.",
            "visibleIf": "always"
          }
        ],
        "interactionModule": {
          "type": "codeFillTheGap",
          "files": [
            {
              "isInteractive": true,
              "name": "index.html",
              "content": "\u003Cbutton\u003EQ\u003C/button\u003E\n\u003Cbutton\u003ER\u003C/button\u003E",
              "codeLanguage": "html"
            }
          ],
          "interactionOptions": [
            {
              "startIndex": 19,
              "endIndex": 20,
              "startLine": 1,
              "startPos": 0,
              "length": 1,
              "value": "\u003C",
              "correct": true
            },
            {
              "startIndex": 20,
              "endIndex": 26,
              "startLine": 1,
              "startPos": 1,
              "length": 6,
              "value": "button",
              "correct": true
            },
            {
              "startIndex": 26,
              "endIndex": 27,
              "startLine": 1,
              "startPos": 7,
              "length": 1,
              "value": "\u003E",
              "correct": true
            },
            {
              "startIndex": 27,
              "endIndex": 28,
              "startLine": 1,
              "startPos": 8,
              "length": 1,
              "value": "R",
              "correct": true
            },
            {
              "startIndex": 28,
              "endIndex": 29,
              "startLine": 1,
              "startPos": 9,
              "length": 1,
              "value": "\u003C",
              "correct": true
            },
            {
              "startIndex": 29,
              "endIndex": 30,
              "startLine": 1,
              "startPos": 10,
              "length": 1,
              "value": "/",
              "correct": true
            },
            {
              "startIndex": 30,
              "endIndex": 36,
              "startLine": 1,
              "startPos": 11,
              "length": 6,
              "value": "button",
              "correct": true
            },
            {
              "startIndex": 36,
              "endIndex": 37,
              "startLine": 1,
              "startPos": 17,
              "length": 1,
              "value": "\u003E",
              "correct": true
            }
          ],
          "wrongOptions": [],
          "output": null
        },
        "postInteractionModules": [
          {
            "visibleIf": "correct",
            "type": "webview",
            "content": "\u003Chtml\u003E\n \u003Chead\u003E\n  \u003Cstyle\u003E\n   body {\n    font-family: sans-serif;\n    color: #2C3E50;\n    background-color: #9aa4d2;\n    margin-top: 5%;\n    min-height: 300px;\n   }\n   \n   button[disabled] {\n    opacity: 0.5;\n    cursor: default;\n   }\n   \n   h2,\n   h1,\n   #result {\n    text-align: center;\n    margin: 5px;\n   }\n   \n   #letterButtons {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    width: 100%;\n    padding: 0;\n    justify-content: center;\n   }\n   \n   button {\n    width: 40px;\n    height: 40px;\n    background-color: #34495E;\n    color: #FFF;\n    font-size: 14px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    margin: 7px;\n    text-align: center;\n   }\n   \n   #result {\n    width: 80%;\n    height: 20px;\n    padding: 10px;\n    font-size: 1.3em;\n    margin: 0px auto;\n    border-radius: 5px;\n    color: white;\n    font-weight: bold;\n   }\n   \n   img {\n    width: 80%;\n    max-width:150px;\n    height: auto;\n    border-radius: 5px;\n    margin: 10px auto;\n    text-align: center;\n    display: none;\n    justify-content: center;\n    border: white 2px solid;\n   }\n  \u003C/style\u003E\n \u003C/head\u003E\n \u003Cbody\u003E\n  \u003Ch1 id=\"result\"\u003E글자를 맞춰보세요\u003C/h1\u003E\n  \u003Ch2\u003E_ O G\u003C/h2\u003E\n  \u003Cimg\u003E\n  \u003Cdiv id=\"letterButtons\"\u003E\n   \u003Cbutton\u003EQ\u003C/button\u003E\n   \u003Cbutton\u003ER\u003C/button\u003E\n  \u003C/div\u003E\n  \u003Cscript\u003E\n   let letterButtons = document.querySelectorAll(\n    '#letterButtons button');\n   let result = document.getElementById('result');\n   let image = document.getElementsByTagName(\"img\")[0];\n   let correctLetter = 'D';\n   let word = document.querySelector('h2');\n   letterButtons.forEach(button =\u003E {\n    button.addEventListener('click', function() {\n     let letter = this.textContent;\n     if (letter !== correctLetter) {\n      button.disabled = true;\n     }\n     if (letter === correctLetter) {\n      result.innerHTML = '정답입니다!';\n      result.style.color = \"#046865\";\n      image.style.display = \"flex\";\n      image.src = 'https://mimo.app/i/dog_yawn.png';\n      word.textContent = 'D O G';\n      letterButtons.forEach(button =\u003E {\n       button.disabled = true;\n      });\n     } else {\n      result.innerHTML = '다시 시도해보세요';\n      result.style.color = \"#D1345B\";\n     }\n    });\n   });\n  \u003C/script\u003E\n \u003C/body\u003E\n\u003C/html\u003E"
          },
          {
            "type": "paragraph",
            "content": "`\u003C`, `button`, `\u003E`, `R`, `\u003C`, `/`, `button`, `\u003E`를 순서대로 선택하세요.",
            "visibleIf": "wrong"
          }
        ]
      },
      {
        "type": "Interactive",
        "id": 75825,
        "index": 10,
        "preInteractionModules": [
          {
            "type": "paragraph",
            "content": "마지막으로, \"D\"라는 라벨이 있는 버튼을 여는 태그와 닫는 태그를 사용하여 만드세요.",
            "visibleIf": "always"
          }
        ],
        "interactionModule": {
          "type": "codeFillTheGap",
          "files": [
            {
              "isInteractive": true,
              "name": "index.html",
              "content": "\u003Cbutton\u003EQ\u003C/button\u003E\n\u003Cbutton\u003ER\u003C/button\u003E\n\u003Cbutton\u003ED\u003C/button\u003E",
              "codeLanguage": "html"
            }
          ],
          "interactionOptions": [
            {
              "startIndex": 38,
              "endIndex": 46,
              "startLine": 2,
              "startPos": 0,
              "length": 8,
              "value": "\u003Cbutton\u003E",
              "correct": true
            },
            {
              "startIndex": 46,
              "endIndex": 47,
              "startLine": 2,
              "startPos": 8,
              "length": 1,
              "value": "D",
              "correct": true
            },
            {
              "startIndex": 47,
              "endIndex": 56,
              "startLine": 2,
              "startPos": 9,
              "length": 9,
              "value": "\u003C/button\u003E",
              "correct": true
            }
          ],
          "wrongOptions": [
            "\u003Cbutton\u003E"
          ],
          "output": null
        },
        "postInteractionModules": [
          {
            "visibleIf": "correct",
            "type": "webview",
            "content": "\u003Chtml\u003E\n \u003Chead\u003E\n  \u003Cstyle\u003E\n   body {\n    font-family: sans-serif;\n    color: #2C3E50;\n    background-color: #9aa4d2;\n    margin-top: 5%;\n    min-height: 300px;\n   }\n   \n   button[disabled] {\n    opacity: 0.5;\n    cursor: default;\n   }\n   \n   h2,\n   h1,\n   #result {\n    text-align: center;\n    margin: 5px;\n   }\n   \n   #letterButtons {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    width: 100%;\n    padding: 0;\n    justify-content: center;\n   }\n   \n   button {\n    width: 40px;\n    height: 40px;\n    background-color: #34495E;\n    color: #FFF;\n    font-size: 14px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    margin: 7px;\n    text-align: center;\n   }\n   \n   #result {\n    width: 80%;\n    height: 20px;\n    padding: 10px;\n    font-size: 1.3em;\n    margin: 0px auto;\n    border-radius: 5px;\n    color: white;\n    font-weight: bold;\n   }\n   \n   img {\n    width: 80%;\n    max-width:150px;\n    height: auto;\n    border-radius: 5px;\n    margin: 10px auto;\n    text-align: center;\n    display: none;\n    justify-content: center;\n    border: white 2px solid;\n   }\n  \u003C/style\u003E\n \u003C/head\u003E\n \u003Cbody\u003E\n  \u003Ch1 id=\"result\"\u003E글자를 맞춰보세요\u003C/h1\u003E\n  \u003Ch2\u003E_ O G\u003C/h2\u003E\n  \u003Cimg\u003E\n  \u003Cdiv id=\"letterButtons\"\u003E\n   \u003Cbutton\u003EQ\u003C/button\u003E\n   \u003Cbutton\u003ER\u003C/button\u003E\n   \u003Cbutton\u003ED\u003C/button\u003E\n  \u003C/div\u003E\n  \u003Cscript\u003E\n   let letterButtons = document.querySelectorAll(\n    '#letterButtons button');\n   let result = document.getElementById('result');\n   let image = document.getElementsByTagName(\"img\")[0];\n   let correctLetter = 'D';\n   let word = document.querySelector('h2');\n   letterButtons.forEach(button =\u003E {\n    button.addEventListener('click', function() {\n     let letter = this.textContent;\n     if (letter !== correctLetter) {\n      button.disabled = true;\n     }\n     if (letter === correctLetter) {\n      result.innerHTML = '정답입니다!';\n      result.style.color = \"#046865\";\n      image.style.display = \"flex\";\n      image.src = 'https://mimo.app/i/dog_yawn.png';\n      word.textContent = 'D O G';\n      letterButtons.forEach(button =\u003E {\n       button.disabled = true;\n      });\n     } else {\n      result.innerHTML = '다시 시도해보세요';\n      result.style.color = \"#D1345B\";\n     }\n    });\n   });\n  \u003C/script\u003E\n \u003C/body\u003E\n\u003C/html\u003E"
          },
          {
            "type": "paragraph",
            "content": "`\u003Cbutton\u003E`를 선택하고, `D`를 선택한 다음, `\u003C/button\u003E`를 선택하세요.",
            "visibleIf": "wrong"
          }
        ]
      },
      {
        "type": "Interactive",
        "id": 75823,
        "index": 11,
        "preInteractionModules": [
          {
            "type": "paragraph",
            "content": "Awesome! We've learned how to create the structure of a button.",
            "visibleIf": "always"
          },
          {
            "type": "paragraph",
            "content": "Before we add actions to them, move on to the next lesson to learn about an **HTML element** present on every web page out there.",
            "visibleIf": "always"
          }
        ],
        "interactionModule": null,
        "postInteractionModules": []
      }
    ],
    "tutorialType": "course",
    "nextTutorial": {
      "id": 906,
      "index": 1,
      "codeLanguage": "html",
      "descriptionContent": "Create stylish text for websites using tags and learn what the head of an HTML page does.",
      "title": "Structuring Text with Tags",
      "type": "course",
      "version": 73,
      "bannerIconUrl": null,
      "chapters": [
        {
          "id": 15309,
          "title": "Line Breaks, Emphasis and Importance",
          "type": "practiceLevel1",
          "lessons": [
            {
              "id": 134830
            },
            {
              "id": 134837
            },
            {
              "id": 134831
            },
            {
              "id": 134812
            },
            {
              "id": 134813
            },
            {
              "id": 134838
            },
            {
              "id": 134814
            },
            {
              "id": 134839
            },
            {
              "id": 134815
            },
            {
              "id": 134816
            },
            {
              "id": 134819
            },
            {
              "id": 134817
            },
            {
              "id": 134818
            }
          ]
        }
      ]
    },
    "chaptersCount": 2,
    "currentChapterIndex": 0,
    "publishSetVersion": 698,
    "trackVersion": 46,
    "tutorialVersion": 151,
    "sectionIndex": 0,
    "codeLanguage": "html"
  }
}